@page "/dictionary"
@inject MySimpleDictionaryService DictService
@using MudBlazor

<MudPaper Class="pa-4 mx-auto" Elevation="4" Style="max-width:700px">
    <MudText Typo="Typo.h5" Class="mb-4">Dictionary Content</MudText>

    <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="@ClearAll" Class="mb-4">
        Clear All
    </MudButton>

    <MudTable Items="entries">
        <HeaderContent>
            <MudTh>Key</MudTh>
            <MudTh>Value</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Key">@context.Key</MudTd>
            <MudTd DataLabel="Value">@context.Value</MudTd>
            <MudTd>
                <MudButton Variant="Variant.Text" Color="Color.Error" OnClick="@(() => RemoveEntry(context.Key))">
                    Remove
                </MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudPaper>

@code {
    private List<KeyValuePair<string, string>> entries = new();

    protected override void OnInitialized()
    {
        entries = DictService.GetAll();
        DictService.OnChange += RefreshEntries;
    }

    private void RefreshEntries()
    {
        InvokeAsync(() =>
        {
            entries = DictService.GetAll();
            StateHasChanged();
        });
    }

    private void ClearAll()
    {
        DictService.Clear();
    }

    private void RemoveEntry(string key)
    {
        DictService.Remove(key);
    }

    public void Dispose()
    {
        DictService.OnChange -= RefreshEntries;
    }
}
